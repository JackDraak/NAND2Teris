// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/HalfAdder.hdl

/**
 * Computes the sum of two bits.
 */

CHIP HalfAdder {
    IN a, b;    // 1-bit inputs
    OUT sum,    // Right bit of a + b	|   sum = A_Xor_B
        carry;  // Left bit of a + b	| carry = A.B

PARTS:
// I've used simple wire IDs because it's the easiest way (for me) to draft a chip design
// on paper and copy it to HDL.  While they do not elucidate the logic at a glance,
// leaving them 'simple' may facilitate re-drafting it. It's a chip that should 
// really be seen as wires anyway, not HDL. :) Frankly, the only difference between
// this chip and the one above is this one doesn't have two NANDs with the same inputs,
// whereas the XOR/AND version does.
	Nand(a=a, b=b, out=c);
	Nand(a=a, b=c, out=d);
	Nand(a=c, b=b, out=e);
	Nand(a=d, b=e, out=sum);
	Nand(a=c, b=true, out=carry);
}

// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

// I reckon there is a more effective way to do this, but I'm trying to save some
// typing (for now... maybe?) so I made my own spec 'Mux4Way' to simplify here:
// .....aaaaand there's a mistake somewhere.... see output at end of file:
PARTS:
	Mux4Way(a=a[0], b=b[0], c=c[0], d=c[0], out=out[0], sel=sel);
	Mux4Way(a=a[1], b=b[1], c=c[1], d=c[1], out=out[1], sel=sel);
	Mux4Way(a=a[2], b=b[2], c=c[2], d=c[2], out=out[2], sel=sel);
	Mux4Way(a=a[3], b=b[3], c=c[3], d=c[3], out=out[3], sel=sel);
	Mux4Way(a=a[4], b=b[4], c=c[4], d=c[4], out=out[4], sel=sel);
	Mux4Way(a=a[5], b=b[5], c=c[5], d=c[5], out=out[5], sel=sel);
	Mux4Way(a=a[6], b=b[6], c=c[6], d=c[6], out=out[6], sel=sel);
	Mux4Way(a=a[7], b=b[7], c=c[7], d=c[7], out=out[7], sel=sel);
	Mux4Way(a=a[8], b=b[8], c=c[8], d=c[8], out=out[8], sel=sel);
	Mux4Way(a=a[9], b=b[9], c=c[9], d=c[9], out=out[9], sel=sel);
	Mux4Way(a=a[10], b=b[10], c=c[10], d=c[10], out=out[10], sel=sel);
	Mux4Way(a=a[11], b=b[11], c=c[11], d=c[11], out=out[11], sel=sel);
	Mux4Way(a=a[12], b=b[12], c=c[12], d=c[12], out=out[12], sel=sel);
	Mux4Way(a=a[13], b=b[13], c=c[13], d=c[13], out=out[13], sel=sel);
	Mux4Way(a=a[14], b=b[14], c=c[14], d=c[14], out=out[14], sel=sel);
	Mux4Way(a=a[15], b=b[15], c=c[15], d=c[15], out=out[15], sel=sel);
}

/*
|        a         |        b         |        c         |        d         | sel  |       out        |
| 0000000000000000 | 0000000000000000 | 0000000000000000 | 0000000000000000 |  00  | 0000000000000000 |
| 0000000000000000 | 0000000000000000 | 0000000000000000 | 0000000000000000 |  01  | 0000000000000000 |
| 0000000000000000 | 0000000000000000 | 0000000000000000 | 0000000000000000 |  10  | 0000000000000000 |
| 0000000000000000 | 0000000000000000 | 0000000000000000 | 0000000000000000 |  11  | 0000000000000000 |
| 0001001000110100 | 1001100001110110 | 1010101010101010 | 0101010101010101 |  00  | 0001001000110100 |
| 0001001000110100 | 1001100001110110 | 1010101010101010 | 0101010101010101 |  01  | 1010101010101010 |
| 0000010011010010 | 0001000011100001 | 1111101100101110 | 1110111100011111 |  10  | 0001000011100001 |
| 0000010011010010 | 0001000011100001 | 1111101100101110 | 1110111100011111 |  11  | 1111101100101110 |

Tested after "fixing" my Mux4Way CHIP:

|        a         |        b         |        c         |        d         | sel  |       out        |
| 0000000000000000 | 0000000000000000 | 0000000000000000 | 0000000000000000 |  00  | 0000000000000000 |
| 0000000000000000 | 0000000000000000 | 0000000000000000 | 0000000000000000 |  01  | 0000000000000000 |
| 0000000000000000 | 0000000000000000 | 0000000000000000 | 0000000000000000 |  10  | 0000000000000000 |
| 0000000000000000 | 0000000000000000 | 0000000000000000 | 0000000000000000 |  11  | 0000000000000000 |
| 0001001000110100 | 1001100001110110 | 1010101010101010 | 0101010101010101 |  00  | 0001001000110100 |
| 0001001000110100 | 1001100001110110 | 1010101010101010 | 0101010101010101 |  01  | 1001100001110110 |
| 0001001000110100 | 1001100001110110 | 1010101010101010 | 0101010101010101 |  10  | 1010101010101010 |
| 0001001000110100 | 1001100001110110 | 1010101010101010 | 0101010101010101 |  11  | 1010101010101010 |
*/
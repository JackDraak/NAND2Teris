// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

// Modeled on RAM8 design, but with fewer memory cells (4 vs. 8).
    PARTS:
	DMux4Way(sel=address[12..13], in=load, a=a, b=b, c=c, d=d);
	RAM4K(in=in, out=aout, load=a, address=address[0..11]);
	RAM4K(in=in, out=bout, load=b, address=address[0..11]);
	RAM4K(in=in, out=cout, load=c, address=address[0..11]);
	RAM4K(in=in, out=dout, load=d, address=address[0..11]);
	Mux4Way16(a=aout, b=bout, c=cout, d=dout, out=out, sel=address[12..13]);
}
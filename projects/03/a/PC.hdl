// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

PARTS:
	Register(in[0]=reset, in[1]=load, in[2]=inc, out[0]=c0, out[1]=c1, out[2]=c2);
	Nand(a=reset, b=c0, out=nr);
	Nand(a=load, b=c1, out=nl);
	Nand(a=inc, b=c2, out=ni);
	Or3Way(a=nr, b=nl, c=ni, out=change);
	Mux16(a=cout, b=false, sel=reset, out=rout);				// apply COUNTER reset			
	Mux16(a=rout, b=in, sel=load, out=lout);					// apply COUNTER load
	Inc16(in=cout, out=cinc);									// COUNTER++
	Mux16(a=lout, b=cinc, sel=inc, out=iout);					// apply COUNTER increment
	Register(in=iout, out=out, load=change, out=cout);			// COUNTER data container
}
// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

PARTS:
	Register(load=rload, in=loriorr, out=regout);		// Increment
	Inc16(in=regout, out=incout);						// Throw away overflow
	Mux16(sel=load, a=incout, b=in, out=lori, out=out);	// Load
	Mux16(sel=reset, a=lori, b=false, out=loriorr);		// Reset
	Nand(a=true, b=load, out=aout);
	Nand(a=true, b=inc, out=bout);
	Nand(a=true, b=reset, out=cout);
	Nand(a=aout, b=bout, out=about);
	Nand(a=true, b=about, out=abnot);
	Nand(a=abnot, b=cout, out=rload);
}
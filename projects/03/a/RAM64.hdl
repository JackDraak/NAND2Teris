// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

PARTS:
	DMux8Way(sel=address[3..5], in=load, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
	RAM8(in=in, out=aout, load=a);
	RAM8(in=in, out=bout, load=b);
	RAM8(in=in, out=cout, load=c);
	RAM8(in=in, out=dout, load=d);
	RAM8(in=in, out=eout, load=e);
	RAM8(in=in, out=fout, load=f);
	RAM8(in=in, out=gout, load=g);
	RAM8(in=in, out=hout, load=h);	
	Mux8Way16(a=aout, b=bout, c=cout, d=dout, e=eout, f=fout, g=gout, h=hout, out=out, sel=address[3..5]);
}
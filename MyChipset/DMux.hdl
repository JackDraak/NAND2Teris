// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux.hdl

/**
 * Demultiplexor:
 * {a, b} = {in, 0} if sel == 0
 *          {0, in} if sel == 1
 */

CHIP DMux {
    IN in, sel;
    OUT a, b;

PARTS:
/*  Prior design obsolete, kept for interest:
	// a=in.!sel
	// b=in.sel
	And(a=in, b=sel, out=b);
	Not(in=sel, out=neqsel);
	And(a=neqsel, b=in, out=a);
*/
// I have a pattern for a 4-NAND 2-way DMux (1-NAND savings)
// for optimization purposes, thanks to playing MHRD:
	Nand(a=sel, b=in, out=z);
	Nand(a=z, b=in, out=y);
	Nand(a=y, b=true, out=a);
	Nand(a=z, b=true, out=b);
}
